{
    "boost.color.any": "warna apapun",
    "boost.color.black": "hitam",
    "boost.color.blue": "biru",
    "boost.color.green": "hijau",
    "boost.color.red": "merah",
    "boost.color.white": "putih",
    "boost.color.yellow": "kuning",
    "boost.getMotorPosition": "posisi motor [MOTOR_REPORTER_ID]",
    "boost.getTiltAngle": "sudut kemiringan [TILT_DIRECTION]",
    "boost.motorDirection.backward": "ke arah sana",
    "boost.motorDirection.forward": "ke arah sini",
    "boost.motorDirection.reverse": "reverse",
    "boost.motorOff": "matikan motor [MOTOR_ID]",
    "boost.motorOn": "nyalakan motor [MOTOR_ID]",
    "boost.motorOnFor": "nyalakan motor [MOTOR_ID] selama [DURATION] detik",
    "boost.motorOnForRotation": "nyalakan motor [MOTOR_ID] selama [ROTATION] rotasi",
    "boost.seeingColor": "melihat bata [COLOR]?",
    "boost.setLightHue": "atur warna lampu ke [HUE]",
    "boost.setMotorDirection": "atur arah motor [MOTOR_ID] [MOTOR_DIRECTION]",
    "boost.setMotorPower": "atur kecepatan motor [MOTOR_ID] ke [POWER] %",
    "boost.tiltDirection.any": "any",
    "boost.tiltDirection.down": "bawah",
    "boost.tiltDirection.left": "kiri",
    "boost.tiltDirection.right": "kanan",
    "boost.tiltDirection.up": "atas",
    "boost.whenColor": "ketika bata [COLOR] dilihat",
    "boost.whenTilted": "ketika dimiringkan [TILT_DIRECTION_ANY]",
    "ev3.beepNote": "bunyikan nada [NOTE] selama [TIME] detik",
    "ev3.buttonPressed": "tombol [PORT] ditekan?",
    "ev3.getBrightness": "kecerahan",
    "ev3.getDistance": "jarak",
    "ev3.getMotorPosition": "posisi motor [PORT]",
    "ev3.motorSetPower": "motor [PORT] atur kekuatan [POWER] %",
    "ev3.motorTurnClockwise": "motor [PORT] belok ke arah ini selama [TIME] detik",
    "ev3.motorTurnCounterClockwise": "motor [PORT] belok ke arah itu selama [TIME] detik",
    "ev3.whenBrightnessLessThan": "ketika kecerahan < [DISTANCE]",
    "ev3.whenButtonPressed": "ketika tombol [PORT] ditekan",
    "ev3.whenDistanceLessThan": "ketika jarak < [DISTANCE]",
    "gdxfor.getAcceleration": "akselerasi [DIRECTION]",
    "gdxfor.getForce": "gaya",
    "gdxfor.getSpin": "kecepatan berputar [DIRECTION]",
    "gdxfor.getTilt": "sudut kemiringan [TILT]",
    "gdxfor.isFreeFalling": "sedang jatuh bebas?",
    "gdxfor.isTilted": "dimiringkan [TILT]?",
    "gdxfor.pulled": "ditarik",
    "gdxfor.pushed": "didorong",
    "gdxfor.shaken": "digoyang",
    "gdxfor.startedFalling": "mulai jatuh bebas",
    "gdxfor.tiltDirectionMenu.any": "any",
    "gdxfor.tiltDirectionMenu.back": "belakang",
    "gdxfor.tiltDirectionMenu.front": "depan",
    "gdxfor.tiltDirectionMenu.left": "kiri",
    "gdxfor.tiltDirectionMenu.right": "kanan",
    "gdxfor.turnedFaceDown": "tengkurap",
    "gdxfor.turnedFaceUp": "telentang",
    "gdxfor.whenForcePushedOrPulled": "ketika sensor gaya [PUSH_PULL]",
    "gdxfor.whenGesture": "ketika [GESTURE]",
    "gdxfor.whenTilted": "ketika dimiringkan [TILT]",
    "makeymakey.downArrow": "panah bawah",
    "makeymakey.downArrowShort": "bawah",
    "makeymakey.leftArrow": "panah kiri",
    "makeymakey.leftArrowShort": "kiri",
    "makeymakey.rightArrow": "panah kanan",
    "makeymakey.rightArrowShort": "kanan",
    "makeymakey.spaceKey": "spasi",
    "makeymakey.upArrow": "panah atas",
    "makeymakey.upArrowShort": "atas",
    "makeymakey.whenKeyPressed": "ketika tombol [KEY] ditekan",
    "makeymakey.whenKeysPressedInOrder": "ketika [SEQUENCE] ditekan dalam urutan tersebut",
    "microbit.buttonsMenu.any": "manapun",
    "microbit.clearDisplay": "bersihkan tampilan",
    "microbit.defaultTextToDisplay": "Halo!",
    "microbit.displaySymbol": "tampilkan [MATRIX]",
    "microbit.displayText": "tampilkan teks [TEXT]",
    "microbit.gesturesMenu.jumped": "melompat",
    "microbit.gesturesMenu.moved": "bergerak",
    "microbit.gesturesMenu.shaken": "tergoyang",
    "microbit.isButtonPressed": "tombol [BTN] ditekan?",
    "microbit.isTilted": "miring [DIRECTION]?",
    "microbit.pinStateMenu.off": "mati",
    "microbit.pinStateMenu.on": "hidup",
    "microbit.tiltAngle": "sudut miring [DIRECTION]",
    "microbit.tiltDirectionMenu.any": "manapun",
    "microbit.tiltDirectionMenu.back": "belakang",
    "microbit.tiltDirectionMenu.front": "depan",
    "microbit.tiltDirectionMenu.left": "kiri",
    "microbit.tiltDirectionMenu.right": "kanan",
    "microbit.whenButtonPressed": "ketika tombol [BTN] ditekan",
    "microbit.whenGesture": "ketika [GESTURE]",
    "microbit.whenPinConnected": "ketika pin [PIN] disambung",
    "microbit.whenTilted": "ketika dimiringkan [DIRECTION]",
    "music.categoryName": "Musik",
    "music.changeTempo": "ubah tempo sebesar [TEMPO]",
    "music.drumBass": "(2) Drum Bass",
    "music.drumBongo": "(13) Bongo",
    "music.drumCabasa": "(15) Cabasa",
    "music.drumClaves": "(9) Claves",
    "music.drumClosedHiHat": "(6) Hi-Hat Tertutup",
    "music.drumConga": "(14) Conga",
    "music.drumCowbell": "(11) Lonceng Sapi",
    "music.drumCrashCymbal": "(4) Simbal",
    "music.drumCuica": "(18) Cuica",
    "music.drumGuiro": "(16) Guiro",
    "music.drumHandClap": "(8) Tepukan Tangan",
    "music.drumOpenHiHat": "(5) Hi-Hat Terbuka",
    "music.drumSideStick": "(3) Tongkat Samping",
    "music.drumSnare": "(1) Drum Senar",
    "music.drumTambourine": "(7) Tamborin",
    "music.drumTriangle": "(12) Triangle",
    "music.drumVibraslap": "(17) Vibraslap",
    "music.drumWoodBlock": "(10) Balok Kayu",
    "music.getTempo": "tempo",
    "music.instrumentBass": "(6) Bass",
    "music.instrumentBassoon": "(14) Fagot",
    "music.instrumentCello": "(8) Cello",
    "music.instrumentChoir": "(15) Paduan Suara",
    "music.instrumentClarinet": "(10) Klarinet",
    "music.instrumentElectricGuitar": "(5) Gitar Listrik",
    "music.instrumentElectricPiano": "(2) Piano Listrik",
    "music.instrumentFlute": "(12) Seruling",
    "music.instrumentGuitar": "(4) Gitar",
    "music.instrumentMarimba": "(19) Marimba",
    "music.instrumentMusicBox": "(17) Kotak Musik",
    "music.instrumentOrgan": "(3) Organ",
    "music.instrumentPiano": "(1) Piano",
    "music.instrumentPizzicato": "(7) Pizzicato",
    "music.instrumentSaxophone": "(11) Saksofon",
    "music.instrumentSteelDrum": "(18) Drum Baja",
    "music.instrumentSynthLead": "(20) Sintesis Pimpinan",
    "music.instrumentSynthPad": "(21) Pad Sintesis",
    "music.instrumentTrombone": "(9) Trombon",
    "music.instrumentVibraphone": "(16) Vibrafon",
    "music.instrumentWoodenFlute": "(13) Seruling Kayu",
    "music.midiPlayDrumForBeats": "mainkan drum [DRUM] selama [BEATS] ketukan",
    "music.midiSetInstrument": "atur instrumen ke [INSTRUMENT]",
    "music.playDrumForBeats": "mainkan drum [DRUM] selama [BEATS] ketukan",
    "music.playNoteForBeats": "mainkan nada [NOTE] selama [BEATS] ketukan",
    "music.restForBeats": "diam selama [BEATS] ketukan",
    "music.setInstrument": "atur instrumen ke [INSTRUMENT]",
    "music.setTempo": "atur tempo ke [TEMPO]",
    "pen.categoryName": "Pena",
    "pen.changeColorParam": "ubah [COLOR_PARAM] pena sebesar [VALUE]",
    "pen.changeHue": "ubah warna pena sebesar [HUE]",
    "pen.changeShade": "ubah kegelapan pena sebesar [SHADE]",
    "pen.changeSize": "ubah ukuran pena sebesar [SIZE]",
    "pen.clear": "hapus semua",
    "pen.colorMenu.brightness": "kecerahan",
    "pen.colorMenu.color": "warna",
    "pen.colorMenu.saturation": "saturasi",
    "pen.colorMenu.transparency": "transparansi",
    "pen.penDown": "tekan pena",
    "pen.penUp": "angkat pena",
    "pen.setColor": "atur warna pena ke [COLOR]",
    "pen.setColorParam": "atur [COLOR_PARAM] pena ke [VALUE]",
    "pen.setHue": "atur warna pena ke [HUE]",
    "pen.setShade": "atur kegelapan pena sebesar [SHADE]",
    "pen.setSize": "atur ukuran pena ke [SIZE]",
    "pen.stamp": "cap",
    "speech.defaultWhenIHearValue": "ayo pergi",
    "speech.extensionName": "Ucapan ke Teks",
    "speech.listenAndWait": "dengarkan dan tunggu",
    "speech.speechReporter": "ucapan",
    "speech.whenIHear": "ketika aku mendengar [PHRASE]",
    "text2speech.alto": "alto",
    "text2speech.categoryName": "Teks ke Ucapan.",
    "text2speech.defaultTextToSpeak": "halo",
    "text2speech.giant": "raksasa",
    "text2speech.kitten": "anak kucing",
    "text2speech.setLanguageBlock": "atur bahasa ke [LANGUAGE]",
    "text2speech.setVoiceBlock": "atur suara ke [VOICE]",
    "text2speech.speakAndWaitBlock": "ujarkan [WORDS]",
    "text2speech.squeak": "mencicit",
    "text2speech.tenor": "tenor",
    "translate.categoryName": "Terjemahkan",
    "translate.defaultTextToTranslate": "halo",
    "translate.translateBlock": "terjemahkan [WORDS] ke [LANGUAGE]",
    "translate.viewerLanguage": "bahasa",
    "videoSensing.categoryName": "Sensor Video",
    "videoSensing.direction": "arah",
    "videoSensing.motion": "gerakan",
    "videoSensing.off": "mati",
    "videoSensing.on": "hidup",
    "videoSensing.onFlipped": "nyala dibalik",
    "videoSensing.setVideoTransparency": "atur transparansi video ke [TRANSPARENCY]",
    "videoSensing.sprite": "sprite",
    "videoSensing.stage": "panggung",
    "videoSensing.videoOn": "video [ATTRIBUTE] di [SUBJECT]",
    "videoSensing.videoToggle": "nyalakan video [VIDEO_STATE]",
    "videoSensing.whenMotionGreaterThan": "ketika gerakan video > [REFERENCE]",
    "wedo2.getDistance": "jarak",
    "wedo2.getTiltAngle": "sudut kemiringan [TILT_DIRECTION]",
    "wedo2.isTilted": "dimiringkan [TILT_DIRECTION_ANY]?",
    "wedo2.motorDirection.backward": "ke arah sana",
    "wedo2.motorDirection.forward": "ke arah sini",
    "wedo2.motorDirection.reverse": "balikkan arah",
    "wedo2.motorId.a": "motor A",
    "wedo2.motorId.all": "semua motor",
    "wedo2.motorId.b": "motor B",
    "wedo2.motorId.default": "motor",
    "wedo2.motorOff": "matikan [MOTOR_ID]",
    "wedo2.motorOn": "nyalakan [MOTOR_ID]",
    "wedo2.motorOnFor": "nyalakan [MOTOR_ID] selama [DURATION] detik",
    "wedo2.playNoteFor": "mainkan nada [NOTE] selama [DURATION] detik",
    "wedo2.setLightHue": "atur warna lampu ke [HUE]",
    "wedo2.setMotorDirection": "atur arah [MOTOR_ID] ke [MOTOR_DIRECTION]",
    "wedo2.startMotorPower": "atur kekuatan [MOTOR_ID] ke [POWER]",
    "wedo2.tiltDirection.any": "manapun",
    "wedo2.tiltDirection.down": "bawah",
    "wedo2.tiltDirection.left": "kiri",
    "wedo2.tiltDirection.right": "kanan",
    "wedo2.tiltDirection.up": "atas",
    "wedo2.whenDistance": "ketika jarak [OP] [REFERENCE]",
    "wedo2.whenTilted": "ketika dimiringkan [TILT_DIRECTION_ANY]",
    "cubroiddcmotor.motoroptionmenu.stop": "stop",
    "cubroiddcmotor.motoroptionmenu.left": "rotate left",
    "cubroiddcmotor.motoroptionmenu.right": "rotate right",
    "cubroiddcmotor01.motoroptionmenu.stop": "stop",
    "cubroiddcmotor01.motoroptionmenu.left": "rotate left",
    "cubroiddcmotor01.motoroptionmenu.right": "rotate right",
    "cubroiddcmotor02.motoroptionmenu.stop": "stop",
    "cubroiddcmotor02.motoroptionmenu.left": "rotate left",
    "cubroiddcmotor02.motoroptionmenu.right": "rotate right",
    "cubroiddcmotor.dcMotorControl": "DC Motor [INDEX]",
    "cubroiddcmotor01.extensionName": "DC Motor Block 1",
    "cubroiddcmotor02.extensionName": "DC Motor Block 2",
    "cubroiddcmotor01.dcMotorControl": "turn DC Motor Block 1 [INDEX]",
    "cubroiddcmotor02.dcMotorControl": "turn DC Motor Block 2 [INDEX]",
    "cubroiddcmotor01.dcMotorControl2": "turn DC Motor Block 1 [TIME]for [INDEX] seconds",
    "cubroiddcmotor02.dcMotorControl2": "turn DC Motor Block 2 [TIME]for [INDEX] seconds",
    "cubroiddcmotor01.dcMotorStop": "turn DC Motor Block 1 off",
    "cubroiddcmotor02.dcMotorStop": "turn DC Motor Block 2 off",
    "cubroidled.extensionName": "LED Block",
    "cubroidled.ledMatrixBlock": "display [MATRIX]",
    "cubroidled.ledWordBlock": "display text [MATRIX]",
    "cubroidled.ledNumberBlock": "display number [MATRIX]",
    "cubroidled.ledAllClearBlock": "clear display",
    "cubroidmaster.extensionName": "Master Block",
    "cubroidmaster.colorControl": "turn on the color light [COLOR]",
    "cubroidmaster.colorOff": "light off",
    "cubroidsound.extensionName": "Sound Block",
    "cubroidsound.playSoundBlock": "play note [SOUND]",
    "cubroidsound.playSoundBeatBlock": "play note [SOUND] for [BEATS] beats",
    "cubroidsound.playErrorSoundBlock": "play note [ERROR_SOUND]",
    "cubroidsound.playErrorSoundBeatBlock": "play note [ERROR_SOUND] for [BEATS] beats",
    "cubroidsound.ado": "Do C(48)",
    "cubroidsound.ados": "Do# C#(49)",
    "cubroidsound.are": "Re D(50)",
    "cubroidsound.amib": "Mib Eb(51)",
    "cubroidsound.ami": "Mi E(52)",
    "cubroidsound.afa": "Fa F(53)",
    "cubroidsound.afas": "Fa# F#(54)",
    "cubroidsound.asol": "Sol G(55)",
    "cubroidsound.asols": "Sol# G#(56)",
    "cubroidsound.ala": "La A(57)",
    "cubroidsound.asib": "Sib Bb(58)",
    "cubroidsound.asi": "Si B(59)",
    "cubroidsound.bdo": "Do C(60)",
    "cubroidsound.bdos": "Do# C#(61)",
    "cubroidsound.bre": "Re D(62)",
    "cubroidsound.bmib": "Mib Eb(63)",
    "cubroidsound.bmi": "Mi E(64)",
    "cubroidsound.bfa": "Fa F(65)",
    "cubroidsound.bfas": "Fa# F#(66)",
    "cubroidsound.bsol": "Sol G(67)",
    "cubroidsound.bsols": "Sol# G#(68)",
    "cubroidsound.bla": "Ra A(69)",
    "cubroidsound.bsib": "Sib Bb(70)",
    "cubroidsound.bsi": "Si B(71)",
    "cubroidsound.cdo": "Do C(72)",
    "cubroidsound.cre": "Re D(74)",
    "cubroidsound.cmi": "Mi E(76)",
    "cubroidsound.cfa": "Fa F(77)",
    "cubroidsound.csol": "Sol G(79)",
    "cubroidsound.cla": "Ra A(81)",
    "cubroidsound.csi": "Si B(83)",
    "cubroidsound.ddo": "Do C(84)",
    "cubroidsound.errorSound01": "Error",
    "cubroidsound.errorSound02": "Small effect",
    "cubroidsound.errorSound03": "Warning",
    "cubroidsound.errorSound04": "light",
    "cubroidsound.errorSound05": "basic",
    "cubroidsound.errorSound06": "Great effect",
    "cubroidproximity.extensionName": "Proximity Sensor Block",
    "cubroidproximity.proximityControl": "when obstacle detected",
    "cubroidproximity.isProximityControl": "obstacles detected?",
    "cubroidlighttouch.extensionName": "Light n Touch Sensor Block",
    "cubroidlighttouch.whenButtonPressed": "when button pressed",
    "cubroidlighttouch.isButtonPressed": "button pressed?",
    "cubroidlighttouch.whenBrightnessLessThan01": "when brightness < [DISTANCE]",
    "cubroidlighttouch.whenBrightnessLessThan02": "when brightness > [DISTANCE]",
    "cubroidlighttouch.getBrightness": "brightness"
}
{
    "boost.color.any": "dowolny kolor",
    "boost.color.black": "czarny",
    "boost.color.blue": "niebieski",
    "boost.color.green": "zielony",
    "boost.color.red": "czerwony",
    "boost.color.white": "biały",
    "boost.color.yellow": "żółty",
    "boost.getMotorPosition": "pozycja silnika [MOTOR_REPORTER_ID]",
    "boost.getTiltAngle": "Kąt pochylenia [TILT_DIRECTION]",
    "boost.motorDirection.backward": "w tamten sposób",
    "boost.motorDirection.forward": "w ten sposób",
    "boost.motorDirection.reverse": "odwróć",
    "boost.motorOff": "wyłącz silnik [MOTOR_ID]",
    "boost.motorOn": "turn motor [MOTOR_ID] on",
    "boost.motorOnFor": "turn motor [MOTOR_ID] for [DURATION] seconds",
    "boost.motorOnForRotation": "turn motor [MOTOR_ID] for [ROTATION] rotations",
    "boost.seeingColor": "seeing [COLOR] brick?",
    "boost.setLightHue": "Ustaw kolor światła na [HUE]",
    "boost.setMotorDirection": "set motor [MOTOR_ID] direction [MOTOR_DIRECTION]",
    "boost.setMotorPower": "set motor [MOTOR_ID] speed to [POWER] %",
    "boost.tiltDirection.any": "dowolnie",
    "boost.tiltDirection.down": "w dół",
    "boost.tiltDirection.left": "w lewo",
    "boost.tiltDirection.right": "w prawo",
    "boost.tiltDirection.up": "w górę",
    "boost.whenColor": "when [COLOR] brick seen",
    "boost.whenTilted": "when tilted [TILT_DIRECTION_ANY]",
    "ev3.beepNote": "graj nutę [NOTE] przez [TIME] sekund",
    "ev3.buttonPressed": "Klawisz [PORT] naciśnięty?",
    "ev3.getBrightness": "jasność",
    "ev3.getDistance": "odległość",
    "ev3.getMotorPosition": "pozycja silnika [PORT]",
    "ev3.motorSetPower": "ustaw moc silnika [PORT] na [POWER] %",
    "ev3.motorTurnClockwise": "Obróć silnik [PORT] do ruchu wskazówek zegara na [TIME] sekund",
    "ev3.motorTurnCounterClockwise": "motor [PORT] turn that way for [TIME] seconds",
    "ev3.whenBrightnessLessThan": "Gdy jasność < [DISTANCE]",
    "ev3.whenButtonPressed": "Gdy klawisz [PORT] naciśnięty",
    "ev3.whenDistanceLessThan": "Gdy odległość < [DISTANCE]",
    "gdxfor.getAcceleration": "acceleration [DIRECTION]",
    "gdxfor.getForce": "force",
    "gdxfor.getSpin": "spin speed [DIRECTION]",
    "gdxfor.getTilt": "tilt angle [TILT]",
    "gdxfor.isFreeFalling": "falling?",
    "gdxfor.isTilted": "tilted [TILT]?",
    "gdxfor.pulled": "pulled",
    "gdxfor.pushed": "pushed",
    "gdxfor.shaken": "shaken",
    "gdxfor.startedFalling": "started falling",
    "gdxfor.tiltDirectionMenu.any": "any",
    "gdxfor.tiltDirectionMenu.back": "back",
    "gdxfor.tiltDirectionMenu.front": "front",
    "gdxfor.tiltDirectionMenu.left": "left",
    "gdxfor.tiltDirectionMenu.right": "right",
    "gdxfor.turnedFaceDown": "turned face down",
    "gdxfor.turnedFaceUp": "turned face up",
    "gdxfor.whenForcePushedOrPulled": "when force sensor [PUSH_PULL]",
    "gdxfor.whenGesture": "kiedy [GESTURE]",
    "gdxfor.whenTilted": "when tilted [TILT]",
    "makeymakey.downArrow": "strzałka w dół",
    "makeymakey.downArrowShort": "dół",
    "makeymakey.leftArrow": "strzałka w lewo",
    "makeymakey.leftArrowShort": "lewo",
    "makeymakey.rightArrow": "strzałka w prawo",
    "makeymakey.rightArrowShort": "prawo",
    "makeymakey.spaceKey": "spacja",
    "makeymakey.upArrow": "strzałka w górę",
    "makeymakey.upArrowShort": "góra",
    "makeymakey.whenKeyPressed": "kiedy naciśnięto klawisz [KEY]",
    "makeymakey.whenKeysPressedInOrder": "kiedy naciśnięto kolejno [SEQUENCE]",
    "microbit.buttonsMenu.any": "Dowolny",
    "microbit.clearDisplay": "wyczyść wyświetlacz",
    "microbit.defaultTextToDisplay": "Cześć!",
    "microbit.displaySymbol": "wyświetl [MATRIX]",
    "microbit.displayText": "wyświetl tekst [TEXT]",
    "microbit.gesturesMenu.jumped": "podrzucony",
    "microbit.gesturesMenu.moved": "poruszony",
    "microbit.gesturesMenu.shaken": "potrząśnięty",
    "microbit.isButtonPressed": "[BTN] przycisk naciśnięty?",
    "microbit.isTilted": "nachylony [DIRECTION]",
    "microbit.pinStateMenu.off": "wyłączony",
    "microbit.pinStateMenu.on": "włączony",
    "microbit.tiltAngle": "kąt nachylenia [DIRECTION]",
    "microbit.tiltDirectionMenu.any": "Dowolny",
    "microbit.tiltDirectionMenu.back": "do tyłu",
    "microbit.tiltDirectionMenu.front": "do przodu",
    "microbit.tiltDirectionMenu.left": "w lewo",
    "microbit.tiltDirectionMenu.right": "w prawo",
    "microbit.whenButtonPressed": "Gdy [BTN]naciśnięty",
    "microbit.whenGesture": "kiedy [GESTURE]",
    "microbit.whenPinConnected": "kiedy pin[PIN]połączony",
    "microbit.whenTilted": "gdy nachylony[DIRECTION]",
    "music.categoryName": "Muzyka",
    "music.changeTempo": "zmień tempo na [TEMPO]",
    "music.drumBass": "(2) Bęben basowy",
    "music.drumBongo": "(13) Bongo",
    "music.drumCabasa": "(15) Cabasa",
    "music.drumClaves": "(9) Klawesy",
    "music.drumClosedHiHat": "(6) Zamknięty hi-hat",
    "music.drumConga": "(14) bęben Konga",
    "music.drumCowbell": "(11) Krowi dzwonek",
    "music.drumCrashCymbal": "(4) talerz uderzany pałeczką",
    "music.drumCuica": "(18) Cuíca",
    "music.drumGuiro": "(16) Güiro",
    "music.drumHandClap": "(8) Klaśnięcie",
    "music.drumOpenHiHat": "(5) Otwarty hi-hat",
    "music.drumSideStick": "(3) Side Stick",
    "music.drumSnare": "(1) Werbel",
    "music.drumTambourine": "(7) Tamburyn",
    "music.drumTriangle": "(12) Trójkąt",
    "music.drumVibraslap": "(17) Vibraslap",
    "music.drumWoodBlock": "(10) Drewniany klocek",
    "music.getTempo": "tempo",
    "music.instrumentBass": "(6) Bas",
    "music.instrumentBassoon": "(14) Fagot",
    "music.instrumentCello": "(8) Wiolonczela",
    "music.instrumentChoir": "(15) Chór",
    "music.instrumentClarinet": "(10) Klarnet",
    "music.instrumentElectricGuitar": "(5) Gitara elektryczna",
    "music.instrumentElectricPiano": "(2) Pianino elektroniczne ",
    "music.instrumentFlute": "(12) Flet",
    "music.instrumentGuitar": "(4) Gitara",
    "music.instrumentMarimba": "(19) Marimba",
    "music.instrumentMusicBox": "(17) Pozytywka",
    "music.instrumentOrgan": "(3) Organy",
    "music.instrumentPiano": "(1) Pianino",
    "music.instrumentPizzicato": "(7) Pizzicato",
    "music.instrumentSaxophone": "(11) Saksofon",
    "music.instrumentSteelDrum": "(18) Stalowy bęben",
    "music.instrumentSynthLead": "(26) Wiodący dźwięk syntezatora",
    "music.instrumentSynthPad": "(21) Pad syntezatora",
    "music.instrumentTrombone": "(9) Puzon",
    "music.instrumentVibraphone": "(16) Wibrafon",
    "music.instrumentWoodenFlute": "(13) Drewniany flet",
    "music.midiPlayDrumForBeats": "graj na [DRUM] przez [BEATS] taktów",
    "music.midiSetInstrument": "ustaw instrument na [INSTRUMENT]",
    "music.playDrumForBeats": "graj na [DRUM] przez [BEATS] taktów",
    "music.playNoteForBeats": "zagraj nutę [NOTE] przez [BEATS] taktów",
    "music.restForBeats": "pauzuj przez [BEATS] taktów",
    "music.setInstrument": "ustaw instrument na [INSTRUMENT]",
    "music.setTempo": "ustaw tempo na [TEMPO]",
    "pen.categoryName": "Pióro",
    "pen.changeColorParam": "Zmień [COLOR_PARAM]pisaka o[VALUE]",
    "pen.changeHue": "Zmień kolor pisaka o [HUE]",
    "pen.changeShade": "Zmień odcień pisaka o [SHADE]",
    "pen.changeSize": "Zmień rozmiar pisaka o [SIZE]",
    "pen.clear": "wyczyść wszystko ",
    "pen.colorMenu.brightness": "Jasność",
    "pen.colorMenu.color": "Kolor",
    "pen.colorMenu.saturation": "nasycenie",
    "pen.colorMenu.transparency": "przezroczystość",
    "pen.penDown": "Przyłóż pisak",
    "pen.penUp": "Podnieś pisak ",
    "pen.setColor": "Ustaw kolor pisaka na [COLOR]",
    "pen.setColorParam": "Ustaw [COLOR_PARAM]pisaka na [VALUE]",
    "pen.setHue": "Ustaw kolor pisaka na [HUE]",
    "pen.setShade": "Ustaw odcień pisaka na [SHADE]",
    "pen.setSize": "Ustaw rozmiar pisaka na [SIZE]",
    "pen.stamp": "Stempluj",
    "speech.defaultWhenIHearValue": "chodźmy",
    "speech.extensionName": "Mowa na tekst",
    "speech.listenAndWait": "posłuchaj i czekaj",
    "speech.speechReporter": "mowa",
    "speech.whenIHear": "kiedy wykryję dźwięk [PHRASE]",
    "text2speech.alto": "kobiecy",
    "text2speech.categoryName": "Tekst na Mowę",
    "text2speech.defaultTextToSpeak": "cześć",
    "text2speech.giant": "zmodyfikowany",
    "text2speech.kitten": "kociątko",
    "text2speech.setLanguageBlock": "ustaw język na [LANGUAGE]",
    "text2speech.setVoiceBlock": "Ustaw głos na [VOICE]",
    "text2speech.speakAndWaitBlock": "Powiedz [WORDS]",
    "text2speech.squeak": "dziecięcy",
    "text2speech.tenor": "męski",
    "translate.categoryName": "Tłumacz",
    "translate.defaultTextToTranslate": "cześć",
    "translate.translateBlock": "tłumacz [WORDS] na [LANGUAGE]",
    "translate.viewerLanguage": "język",
    "videoSensing.categoryName": "Czujniki wideo",
    "videoSensing.direction": "Kierunek",
    "videoSensing.motion": "ruch",
    "videoSensing.off": "wyłączony",
    "videoSensing.on": "włączony",
    "videoSensing.onFlipped": "on flipped",
    "videoSensing.setVideoTransparency": "ustaw transparentność wideo na [TRANSPARENCY]",
    "videoSensing.sprite": "duszek",
    "videoSensing.stage": "scena",
    "videoSensing.videoOn": "nagranie wideo [ATTRIBUTE] na [SUBJECT]",
    "videoSensing.videoToggle": " [VIDEO_STATE] nagranie wideo ",
    "videoSensing.whenMotionGreaterThan": "kiedy ruch wideo > [REFERENCE]",
    "wedo2.getDistance": "odległość",
    "wedo2.getTiltAngle": "Kąt pochylenia [TILT_DIRECTION]",
    "wedo2.isTilted": "Pochylony [TILT_DIRECTION_ANY]",
    "wedo2.motorDirection.backward": "w tamten sposób",
    "wedo2.motorDirection.forward": "w ten sposób",
    "wedo2.motorDirection.reverse": "odwróć",
    "wedo2.motorId.a": "silnik A",
    "wedo2.motorId.all": "wszystkie silniki",
    "wedo2.motorId.b": "silnik B",
    "wedo2.motorId.default": "silnik",
    "wedo2.motorOff": "Wyłącz silnik [MOTOR_ID]",
    "wedo2.motorOn": "Włącz silnik [MOTOR_ID]",
    "wedo2.motorOnFor": "Włącz silnik [MOTOR_ID] na [DURATION] sekund",
    "wedo2.playNoteFor": "Graj nutę [NOTE] przez [DURATION] sekund",
    "wedo2.setLightHue": "Ustaw kolor światła na [HUE]",
    "wedo2.setMotorDirection": "Ustaw kierunek silnika [MOTOR_ID] na [MOTOR_DIRECTION]",
    "wedo2.startMotorPower": "Ustaw moc silnika [MOTOR_ID] na [POWER]",
    "wedo2.tiltDirection.any": "Dowolny",
    "wedo2.tiltDirection.down": "dół",
    "wedo2.tiltDirection.left": "lewo",
    "wedo2.tiltDirection.right": "prawo",
    "wedo2.tiltDirection.up": "góra",
    "wedo2.whenDistance": "Gdy dystans [OP] [REFERENCE]",
    "wedo2.whenTilted": "Gdy pochylony [TILT_DIRECTION_ANY]",
    "cubroiddcmotor.motoroptionmenu.stop": "stop",
    "cubroiddcmotor.motoroptionmenu.left": "rotate left",
    "cubroiddcmotor.motoroptionmenu.right": "rotate right",
    "cubroiddcmotor01.motoroptionmenu.stop": "stop",
    "cubroiddcmotor01.motoroptionmenu.left": "rotate left",
    "cubroiddcmotor01.motoroptionmenu.right": "rotate right",
    "cubroiddcmotor02.motoroptionmenu.stop": "stop",
    "cubroiddcmotor02.motoroptionmenu.left": "rotate left",
    "cubroiddcmotor02.motoroptionmenu.right": "rotate right",
    "cubroiddcmotor.dcMotorControl": "DC Motor [INDEX]",
    "cubroiddcmotor01.extensionName": "DC Motor Block 1",
    "cubroiddcmotor02.extensionName": "DC Motor Block 2",
    "cubroiddcmotor01.dcMotorControl": "turn DC Motor Block 1 [INDEX]",
    "cubroiddcmotor02.dcMotorControl": "turn DC Motor Block 2 [INDEX]",
    "cubroiddcmotor01.dcMotorControl2": "turn DC Motor Block 1 [TIME]for [INDEX] seconds",
    "cubroiddcmotor02.dcMotorControl2": "turn DC Motor Block 2 [TIME]for [INDEX] seconds",
    "cubroiddcmotor01.dcMotorStop": "turn DC Motor Block 1 off",
    "cubroiddcmotor02.dcMotorStop": "turn DC Motor Block 2 off",
    "cubroidled.extensionName": "LED Block",
    "cubroidled.ledMatrixBlock": "display [MATRIX]",
    "cubroidled.ledWordBlock": "display text [MATRIX]",
    "cubroidled.ledNumberBlock": "display number [MATRIX]",
    "cubroidled.ledAllClearBlock": "clear display",
    "cubroidmaster.extensionName": "Master Block",
    "cubroidmaster.colorControl": "turn on the color light [COLOR]",
    "cubroidmaster.colorOff": "light off",
    "cubroidsound.extensionName": "Sound Block",
    "cubroidsound.playSoundBlock": "play note [SOUND]",
    "cubroidsound.playSoundBeatBlock": "play note [SOUND] for [BEATS] beats",
    "cubroidsound.playErrorSoundBlock": "play note [ERROR_SOUND]",
    "cubroidsound.playErrorSoundBeatBlock": "play note [ERROR_SOUND] for [BEATS] beats",
    "cubroidsound.ado": "Do C(48)",
    "cubroidsound.ados": "Do# C#(49)",
    "cubroidsound.are": "Re D(50)",
    "cubroidsound.amib": "Mib Eb(51)",
    "cubroidsound.ami": "Mi E(52)",
    "cubroidsound.afa": "Fa F(53)",
    "cubroidsound.afas": "Fa# F#(54)",
    "cubroidsound.asol": "Sol G(55)",
    "cubroidsound.asols": "Sol# G#(56)",
    "cubroidsound.ala": "La A(57)",
    "cubroidsound.asib": "Sib Bb(58)",
    "cubroidsound.asi": "Si B(59)",
    "cubroidsound.bdo": "Do C(60)",
    "cubroidsound.bdos": "Do# C#(61)",
    "cubroidsound.bre": "Re D(62)",
    "cubroidsound.bmib": "Mib Eb(63)",
    "cubroidsound.bmi": "Mi E(64)",
    "cubroidsound.bfa": "Fa F(65)",
    "cubroidsound.bfas": "Fa# F#(66)",
    "cubroidsound.bsol": "Sol G(67)",
    "cubroidsound.bsols": "Sol# G#(68)",
    "cubroidsound.bla": "Ra A(69)",
    "cubroidsound.bsib": "Sib Bb(70)",
    "cubroidsound.bsi": "Si B(71)",
    "cubroidsound.cdo": "Do C(72)",
    "cubroidsound.cre": "Re D(74)",
    "cubroidsound.cmi": "Mi E(76)",
    "cubroidsound.cfa": "Fa F(77)",
    "cubroidsound.csol": "Sol G(79)",
    "cubroidsound.cla": "Ra A(81)",
    "cubroidsound.csi": "Si B(83)",
    "cubroidsound.ddo": "Do C(84)",
    "cubroidsound.errorSound01": "Error",
    "cubroidsound.errorSound02": "Small effect",
    "cubroidsound.errorSound03": "Warning",
    "cubroidsound.errorSound04": "light",
    "cubroidsound.errorSound05": "basic",
    "cubroidsound.errorSound06": "Great effect",
    "cubroidproximity.extensionName": "Proximity Sensor Block",
    "cubroidproximity.proximityControl": "when obstacle detected",
    "cubroidproximity.isProximityControl": "obstacles detected?",
    "cubroidlighttouch.extensionName": "Light n Touch Sensor Block",
    "cubroidlighttouch.whenButtonPressed": "when button pressed",
    "cubroidlighttouch.isButtonPressed": "button pressed?",
    "cubroidlighttouch.whenBrightnessLessThan01": "when brightness < [DISTANCE]",
    "cubroidlighttouch.whenBrightnessLessThan02": "when brightness > [DISTANCE]",
    "cubroidlighttouch.getBrightness": "brightness"
}
{
    "boost.color.any": "any color",
    "boost.color.black": "black",
    "boost.color.blue": "blue",
    "boost.color.green": "green",
    "boost.color.red": "red",
    "boost.color.white": "white",
    "boost.color.yellow": "yellow",
    "boost.getMotorPosition": "motor [MOTOR_REPORTER_ID] position",
    "boost.getTiltAngle": "tilt angle [TILT_DIRECTION]",
    "boost.motorDirection.backward": "that way",
    "boost.motorDirection.forward": "this way",
    "boost.motorDirection.reverse": "reverse",
    "boost.motorOff": "turn motor [MOTOR_ID] off",
    "boost.motorOn": "turn motor [MOTOR_ID] on",
    "boost.motorOnFor": "turn motor [MOTOR_ID] for [DURATION] seconds",
    "boost.motorOnForRotation": "turn motor [MOTOR_ID] for [ROTATION] rotations",
    "boost.seeingColor": "seeing [COLOR] brick?",
    "boost.setLightHue": "set light color to [HUE]",
    "boost.setMotorDirection": "set motor [MOTOR_ID] direction [MOTOR_DIRECTION]",
    "boost.setMotorPower": "set motor [MOTOR_ID] speed to [POWER] %",
    "boost.tiltDirection.any": "any",
    "boost.tiltDirection.down": "down",
    "boost.tiltDirection.left": "left",
    "boost.tiltDirection.right": "right",
    "boost.tiltDirection.up": "up",
    "boost.whenColor": "when [COLOR] brick seen",
    "boost.whenTilted": "when tilted [TILT_DIRECTION_ANY]",
    "ev3.beepNote": "pīkstināt noti [NOTE] [TIME] sekundes",
    "ev3.buttonPressed": "poga [PORT] piespiesta?",
    "ev3.getBrightness": "gaišums",
    "ev3.getDistance": "attālums",
    "ev3.getMotorPosition": "motora [PORT] pozīcija",
    "ev3.motorSetPower": "motoram [PORT] iestatīt enerģiju uz [POWER] %",
    "ev3.motorTurnClockwise": "motoru [PORT] pagriezt šajā virzienā [TIME] sekundes",
    "ev3.motorTurnCounterClockwise": "motoru [PORT] pagriezt tajā virzienā [TIME] sekundes",
    "ev3.whenBrightnessLessThan": "kad gaišums < [DISTANCE]",
    "ev3.whenButtonPressed": "kad poga [PORT] piespiesta",
    "ev3.whenDistanceLessThan": "kad attālums < [DISTANCE]",
    "gdxfor.getAcceleration": "paātrinājums [DIRECTION]",
    "gdxfor.getForce": "spēks",
    "gdxfor.getSpin": "spin speed [DIRECTION]",
    "gdxfor.getTilt": "tilt angle [TILT]",
    "gdxfor.isFreeFalling": "falling?",
    "gdxfor.isTilted": "tilted [TILT]?",
    "gdxfor.pulled": "pulled",
    "gdxfor.pushed": "pushed",
    "gdxfor.shaken": "shaken",
    "gdxfor.startedFalling": "started falling",
    "gdxfor.tiltDirectionMenu.any": "any",
    "gdxfor.tiltDirectionMenu.back": "back",
    "gdxfor.tiltDirectionMenu.front": "front",
    "gdxfor.tiltDirectionMenu.left": "left",
    "gdxfor.tiltDirectionMenu.right": "right",
    "gdxfor.turnedFaceDown": "turned face down",
    "gdxfor.turnedFaceUp": "turned face up",
    "gdxfor.whenForcePushedOrPulled": "when force sensor [PUSH_PULL]",
    "gdxfor.whenGesture": "when [GESTURE]",
    "gdxfor.whenTilted": "when tilted [TILT]",
    "makeymakey.downArrow": "lejuptaustiņš",
    "makeymakey.downArrowShort": "uz leju",
    "makeymakey.leftArrow": "kreisais bulttaustiņš",
    "makeymakey.leftArrowShort": "pa kreisi",
    "makeymakey.rightArrow": "labais bulttaustiņš",
    "makeymakey.rightArrowShort": "pa labi",
    "makeymakey.spaceKey": "atstarpe",
    "makeymakey.upArrow": "augšuptaustiņš",
    "makeymakey.upArrowShort": "uz augšu",
    "makeymakey.whenKeyPressed": "when [KEY] key pressed",
    "makeymakey.whenKeysPressedInOrder": "when [SEQUENCE] pressed in order",
    "microbit.buttonsMenu.any": "jebkāds",
    "microbit.clearDisplay": "notīrīt ekrānu",
    "microbit.defaultTextToDisplay": "Sveiki!",
    "microbit.displaySymbol": "rādīt [MATRIX]",
    "microbit.displayText": "rādīt tekstu [TEXT]",
    "microbit.gesturesMenu.jumped": "palēcās",
    "microbit.gesturesMenu.moved": "pārvietojās",
    "microbit.gesturesMenu.shaken": "pakratījās",
    "microbit.isButtonPressed": "[BTN] poga piespiesta?",
    "microbit.isTilted": "noliekts [DIRECTION]?",
    "microbit.pinStateMenu.off": "izslēgts",
    "microbit.pinStateMenu.on": "ieslēgts",
    "microbit.tiltAngle": "noliekt leņķī [DIRECTION]",
    "microbit.tiltDirectionMenu.any": "jebkur",
    "microbit.tiltDirectionMenu.back": "uz aizmuguri",
    "microbit.tiltDirectionMenu.front": "uz priekšu",
    "microbit.tiltDirectionMenu.left": "pa kreisi",
    "microbit.tiltDirectionMenu.right": "pa labi",
    "microbit.whenButtonPressed": "kad poga [BTN] piespiesta",
    "microbit.whenGesture": "kad [GESTURE]",
    "microbit.whenPinConnected": "kad spraudnis [PIN] savienots",
    "microbit.whenTilted": "kad noliekts [DIRECTION]",
    "music.categoryName": "Mūzika",
    "music.changeTempo": "mainīt tempu par [TEMPO]",
    "music.drumBass": "(2) Basa bungas",
    "music.drumBongo": "(13) Bongo",
    "music.drumCabasa": "(15) Kabasa",
    "music.drumClaves": "(9) Klaves",
    "music.drumClosedHiHat": "(6) Slēgtais Hi-Hat šķīvis",
    "music.drumConga": "(14) Konga",
    "music.drumCowbell": "(11) Zvans",
    "music.drumCrashCymbal": "(4) Crash šķīvji",
    "music.drumCuica": "(18) Cuica",
    "music.drumGuiro": "(16) Guiro",
    "music.drumHandClap": "(8) Roku plaukšķis",
    "music.drumOpenHiHat": "(5) Atvērts Hi-Hat šķīvis",
    "music.drumSideStick": "(3) Bungu malas piesitiens",
    "music.drumSnare": "(1) Solo bungas",
    "music.drumTambourine": "(7) Tamburīns",
    "music.drumTriangle": "(12) Trijstūris",
    "music.drumVibraslap": "(17) Vibra slaperis",
    "music.drumWoodBlock": "(10) Koka bloks",
    "music.getTempo": "temps",
    "music.instrumentBass": "(6) Bass",
    "music.instrumentBassoon": "(14) Fagots",
    "music.instrumentCello": "(8) Čells",
    "music.instrumentChoir": "(15) Koris",
    "music.instrumentClarinet": "(10) Klarnete",
    "music.instrumentElectricGuitar": "(5) Elektriskā ģitāra",
    "music.instrumentElectricPiano": "(2) Elektriskās klavieres",
    "music.instrumentFlute": "(12) Flauta",
    "music.instrumentGuitar": "(4) Ģitāra",
    "music.instrumentMarimba": "(19) Marimba",
    "music.instrumentMusicBox": "(17) Mūzikas lādīte",
    "music.instrumentOrgan": "(3) Ērģeles",
    "music.instrumentPiano": "(1)  Klavieres",
    "music.instrumentPizzicato": "(7) Pičkato",
    "music.instrumentSaxophone": "(11) Saksofons",
    "music.instrumentSteelDrum": "(18) Metāla bungas",
    "music.instrumentSynthLead": "(20) Galvenais sintezators",
    "music.instrumentSynthPad": "(21) Pavadošais sintezators",
    "music.instrumentTrombone": "(9) Trombons",
    "music.instrumentVibraphone": "(16) Ksilofons",
    "music.instrumentWoodenFlute": "(13) Koka flauta",
    "music.midiPlayDrumForBeats": "spēlēt bungas [DRUM] [BEATS] sitienus",
    "music.midiSetInstrument": "iestatīt instrumentu uz [INSTRUMENT]",
    "music.playDrumForBeats": "spēlēt bungas [DRUM] [BEATS] sitienus",
    "music.playNoteForBeats": "spēlēt noti [NOTE] [BEATS] sitienus",
    "music.restForBeats": "pauze [BEATS] sitienus",
    "music.setInstrument": "iestatīt instrumentu uz [INSTRUMENT]",
    "music.setTempo": "iestatīt tempu uz [TEMPO]",
    "pen.categoryName": "Zīmulis",
    "pen.changeColorParam": "mainīt zīmuļa [COLOR_PARAM] par [VALUE]",
    "pen.changeHue": "mainīt zīmuļa krāsu par [HUE]",
    "pen.changeShade": "mainīt zīmuļa tumšumu par [SHADE]",
    "pen.changeSize": "mainīt zīmuļa izmēru par [SIZE]",
    "pen.clear": "notīrīt visu",
    "pen.colorMenu.brightness": "gaišums",
    "pen.colorMenu.color": "krāsa",
    "pen.colorMenu.saturation": "piesātinājums",
    "pen.colorMenu.transparency": "caurspīdīgums",
    "pen.penDown": "zīmulis piespiests",
    "pen.penUp": "zīmulis pacelts",
    "pen.setColor": "iestatīt zīmuļa krāsu uz [COLOR]",
    "pen.setColorParam": "iestatīt zīmuļa [COLOR_PARAM] uz [VALUE]",
    "pen.setHue": "iestatīt zīmuļa krāsu uz [HUE]",
    "pen.setShade": "iestatīt zīmuļa tumšumu uz [SHADE]",
    "pen.setSize": "iestatīt zīmuļa izmēru uz [SIZE]",
    "pen.stamp": "zīmogs",
    "speech.defaultWhenIHearValue": "aiziet",
    "speech.extensionName": "Runas pārvēršana tekstā",
    "speech.listenAndWait": "klausīties un gaidīt",
    "speech.speechReporter": "runa",
    "speech.whenIHear": "kad es dzirdu [PHRASE]",
    "text2speech.alto": "alts",
    "text2speech.categoryName": "Text to Speech",
    "text2speech.defaultTextToSpeak": "hello",
    "text2speech.giant": "milzis",
    "text2speech.kitten": "kaķēns",
    "text2speech.setLanguageBlock": "iestatīt valodu uz [LANGUAGE]",
    "text2speech.setVoiceBlock": "iestatīt balsi uz [VOICE]",
    "text2speech.speakAndWaitBlock": "teikt [WORDS]",
    "text2speech.squeak": "pīkstiens",
    "text2speech.tenor": "tenors",
    "translate.categoryName": "Tulkot",
    "translate.defaultTextToTranslate": "sveiki",
    "translate.translateBlock": "tulkot [WORDS] uz [LANGUAGE]",
    "translate.viewerLanguage": "valoda",
    "videoSensing.categoryName": "Video uztveršana",
    "videoSensing.direction": "virziens",
    "videoSensing.motion": "kustība",
    "videoSensing.off": "izslēgt",
    "videoSensing.on": "ieslēgt",
    "videoSensing.onFlipped": "ieslēgt apgrieztu",
    "videoSensing.setVideoTransparency": "iestatīt video caurspīdīgumu uz [TRANSPARENCY]",
    "videoSensing.sprite": "gariņš",
    "videoSensing.stage": "skatuve",
    "videoSensing.videoOn": "video [ATTRIBUTE] uz [SUBJECT]",
    "videoSensing.videoToggle": "[VIDEO_STATE]video",
    "videoSensing.whenMotionGreaterThan": "kad video kustība > [REFERENCE]",
    "wedo2.getDistance": "attālums",
    "wedo2.getTiltAngle": "noliekt leņķī [TILT_DIRECTION]",
    "wedo2.isTilted": "noliekts [TILT_DIRECTION_ANY]?",
    "wedo2.motorDirection.backward": "uz otru pusi",
    "wedo2.motorDirection.forward": "uz šo pusi",
    "wedo2.motorDirection.reverse": "apgriezt pretējā virzienā",
    "wedo2.motorId.a": "motors A",
    "wedo2.motorId.all": "visi motori",
    "wedo2.motorId.b": "motors B",
    "wedo2.motorId.default": "motors",
    "wedo2.motorOff": "izslēgt [MOTOR_ID]",
    "wedo2.motorOn": "ieslēgt [MOTOR_ID]",
    "wedo2.motorOnFor": "ieslēgt [MOTOR_ID] [DURATION] sekundes",
    "wedo2.playNoteFor": "spēlēt noti [NOTE] [DURATION] sekundes",
    "wedo2.setLightHue": "iestatīt gaismas krāsu uz [HUE]",
    "wedo2.setMotorDirection": "iestatīt [MOTOR_ID] virzienu uz [MOTOR_DIRECTION]",
    "wedo2.startMotorPower": "iestatīt [MOTOR_ID] enerģiju uz [POWER]",
    "wedo2.tiltDirection.any": "jebkādā virzienā",
    "wedo2.tiltDirection.down": "uz leju",
    "wedo2.tiltDirection.left": "pa kreisi",
    "wedo2.tiltDirection.right": "pa labi",
    "wedo2.tiltDirection.up": "uz augšu",
    "wedo2.whenDistance": "kad attālums [OP][REFERENCE]",
    "wedo2.whenTilted": "kad noliekts [TILT_DIRECTION_ANY]",
    "cubroiddcmotor.motoroptionmenu.stop": "stop",
    "cubroiddcmotor.motoroptionmenu.left": "rotate left",
    "cubroiddcmotor.motoroptionmenu.right": "rotate right",
    "cubroiddcmotor01.motoroptionmenu.stop": "stop",
    "cubroiddcmotor01.motoroptionmenu.left": "rotate left",
    "cubroiddcmotor01.motoroptionmenu.right": "rotate right",
    "cubroiddcmotor02.motoroptionmenu.stop": "stop",
    "cubroiddcmotor02.motoroptionmenu.left": "rotate left",
    "cubroiddcmotor02.motoroptionmenu.right": "rotate right",
    "cubroiddcmotor.dcMotorControl": "DC Motor [INDEX]",
    "cubroiddcmotor01.extensionName": "DC Motor Block 1",
    "cubroiddcmotor02.extensionName": "DC Motor Block 2",
    "cubroiddcmotor01.dcMotorControl": "turn DC Motor Block 1 [INDEX]",
    "cubroiddcmotor02.dcMotorControl": "turn DC Motor Block 2 [INDEX]",
    "cubroiddcmotor01.dcMotorControl2": "turn DC Motor Block 1 [TIME]for [INDEX] seconds",
    "cubroiddcmotor02.dcMotorControl2": "turn DC Motor Block 2 [TIME]for [INDEX] seconds",
    "cubroiddcmotor01.dcMotorStop": "turn DC Motor Block 1 off",
    "cubroiddcmotor02.dcMotorStop": "turn DC Motor Block 2 off",
    "cubroidled.extensionName": "LED Block",
    "cubroidled.ledMatrixBlock": "display [MATRIX]",
    "cubroidled.ledWordBlock": "display text [MATRIX]",
    "cubroidled.ledNumberBlock": "display number [MATRIX]",
    "cubroidled.ledAllClearBlock": "clear display",
    "cubroidmaster.extensionName": "Master Block",
    "cubroidmaster.colorControl": "turn on the color light [COLOR]",
    "cubroidmaster.colorOff": "light off",
    "cubroidsound.extensionName": "Sound Block",
    "cubroidsound.playSoundBlock": "play note [SOUND]",
    "cubroidsound.playSoundBeatBlock": "play note [SOUND] for [BEATS] beats",
    "cubroidsound.playErrorSoundBlock": "play note [ERROR_SOUND]",
    "cubroidsound.playErrorSoundBeatBlock": "play note [ERROR_SOUND] for [BEATS] beats",
    "cubroidsound.ado": "Do C(48)",
    "cubroidsound.ados": "Do# C#(49)",
    "cubroidsound.are": "Re D(50)",
    "cubroidsound.amib": "Mib Eb(51)",
    "cubroidsound.ami": "Mi E(52)",
    "cubroidsound.afa": "Fa F(53)",
    "cubroidsound.afas": "Fa# F#(54)",
    "cubroidsound.asol": "Sol G(55)",
    "cubroidsound.asols": "Sol# G#(56)",
    "cubroidsound.ala": "La A(57)",
    "cubroidsound.asib": "Sib Bb(58)",
    "cubroidsound.asi": "Si B(59)",
    "cubroidsound.bdo": "Do C(60)",
    "cubroidsound.bdos": "Do# C#(61)",
    "cubroidsound.bre": "Re D(62)",
    "cubroidsound.bmib": "Mib Eb(63)",
    "cubroidsound.bmi": "Mi E(64)",
    "cubroidsound.bfa": "Fa F(65)",
    "cubroidsound.bfas": "Fa# F#(66)",
    "cubroidsound.bsol": "Sol G(67)",
    "cubroidsound.bsols": "Sol# G#(68)",
    "cubroidsound.bla": "Ra A(69)",
    "cubroidsound.bsib": "Sib Bb(70)",
    "cubroidsound.bsi": "Si B(71)",
    "cubroidsound.cdo": "Do C(72)",
    "cubroidsound.cre": "Re D(74)",
    "cubroidsound.cmi": "Mi E(76)",
    "cubroidsound.cfa": "Fa F(77)",
    "cubroidsound.csol": "Sol G(79)",
    "cubroidsound.cla": "Ra A(81)",
    "cubroidsound.csi": "Si B(83)",
    "cubroidsound.ddo": "Do C(84)",
    "cubroidsound.errorSound01": "Error",
    "cubroidsound.errorSound02": "Small effect",
    "cubroidsound.errorSound03": "Warning",
    "cubroidsound.errorSound04": "light",
    "cubroidsound.errorSound05": "basic",
    "cubroidsound.errorSound06": "Great effect",
    "cubroidproximity.extensionName": "Proximity Sensor Block",
    "cubroidproximity.proximityControl": "when obstacle detected",
    "cubroidproximity.isProximityControl": "obstacles detected?",
    "cubroidlighttouch.extensionName": "Light n Touch Sensor Block",
    "cubroidlighttouch.whenButtonPressed": "when button pressed",
    "cubroidlighttouch.isButtonPressed": "button pressed?",
    "cubroidlighttouch.whenBrightnessLessThan01": "when brightness < [DISTANCE]",
    "cubroidlighttouch.whenBrightnessLessThan02": "when brightness > [DISTANCE]",
    "cubroidlighttouch.getBrightness": "brightness"
}